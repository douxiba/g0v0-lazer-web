---
import { Image } from "astro:assets";
import osuCookieImg from "../../assets/images/osu-cookie.svg";
import heroImg from "../../assets/images/hero-image2.png";
import cardImg1 from "../../assets/images/card-image1.svg";
import cardImg2 from "../../assets/images/card-image2.svg";
import cardImg3 from "../../assets/images/card-image3.svg";
import cardImg4 from "../../assets/images/card-image4.svg";
import cardImg5 from "../../assets/images/card-image5.svg";
import cardImg6 from "../../assets/images/card-image6.svg";
import cardImg7 from "../../assets/images/card-image7.svg";
import cardImg8 from "../../assets/images/card-image8.svg";
import GsuButton from "../general/GsuButton.astro";
import {
	ArrowDownToLine,
	Book,
	UserRoundPlus,
	MonitorCheck,
	Rocket,
	MessageSquareHeart,
	Settings,
	Bug,
	GitFork,
	Send,
	ChartColumnBig,
} from "@lucide/astro";
import ShieldsBadge from "./ShieldsBadge.astro";
import Qq from "simple-icons-astro/Qq";
import Github from "simple-icons-astro/Github";
import Discord from "simple-icons-astro/Discord";
import InfoCard from "./InfoCard.astro";
import { createIntlCache, createIntl } from "@formatjs/intl";
import { getEntry } from "astro:content";

const { lang } = Astro.props;
const langObj = (await getEntry("i18n", lang || "en-US"))?.data;
const langEnUs = (await getEntry("i18n", "en-US"))?.data;
const cache = createIntlCache();
const intl = createIntl(
	{
		// Locale of the application
		locale: lang,
		// Locale of the fallback defaultMessage
		defaultLocale: "en-US",
		messages: langObj,
	},
	cache,
);
---

<main class="grid lg:grid-cols-2 w-full place-items-center pt-12 pb-12 md:pt-18">
	<div class="py-6 md:order-1 hidden md:block w-full">
		<img src={heroImg.src} alt="gsu hero image" class="w-128 ml-auto object-contain" />
	</div>
	<div class="w-full flex flex-col items-start justify-start">
		<h1
			class="gap-x-2 text-3xl lg:text-5xl flex flex-row items-center font-bold text-primary-800 dark:text-primary-400 lg:tracking-tight xl:tracking-tight">
			{
				intl
					.formatMessage({ id: "hero.title", defaultMessage: langEnUs["hero.title"] })
					.replace("<cookie>", "|<cookie>|")
					.split("|")
					.map((e) => {
						if (e === "<cookie>") return <Image src={osuCookieImg} alt="" class="h-15 w-15" />;
						else return <span>{e}</span>;
					})
			}
		</h1>
		<p class="text-xl mt-4 text-zinc-600 dark:text-zinc-400 max-w-xl">
			{
				intl
					.formatMessage({ id: "hero.description", defaultMessage: langEnUs["hero.description"] })
					.replace(/<highlight-[^>]+>/g, (match) => `|${match}|`)
					.split("|")
					.map((e) => {
						if (e.startsWith("<highlight-")) {
							let matchResult = [...e.matchAll(/<highlight-([^>]+)>/g)][0][1];
							console.log(matchResult);
							let str = intl.formatMessage({
								id: "hero.description.highlight." + matchResult,
								defaultMessage: langEnUs["hero.description.highlight." + matchResult],
							});
							return <span class="shiny-sec font-bold">{str}</span>;
						} else return <span>{e}</span>;
					})
			}
		</p>
		<div class="flex flex-col mt-4">
			<p class="text-primary-700 dark:text-primary-300 text-base font-bold flex items-center my-0">
				<span class="inline-flex items-center gap-2">
					<span class="w-3 h-3 rounded-full bg-green-500 dark:bg-green-400 animate-pulse"></span>
					{intl.formatMessage({ id: "hero.status.normal", defaultMessage: langEnUs["hero.status.normal"] })}
				</span>
				<span class="mx-2">·</span>
				<span>{intl.formatMessage({ id: "hero.status.description", defaultMessage: langEnUs["hero.status.description"] })}</span>
			</p>
			<div class="flex flex-row mt-2 gap-2">
				<ShieldsBadge
					label="QQ群"
					message="1059561526"
					labelClass="bg-zinc-700 text-white"
					messageClass="text-white bg-sky-600 dark:bg-sky-700">
					<Qq class="h-4 -ml-1" slot="logo" />
				</ShieldsBadge>
				<ShieldsBadge
					label="Discord"
					message="rt94zPuE"
					labelClass="bg-zinc-700 text-white"
					messageClass="text-white bg-yellow-600 dark:bg-yellow-700">
					<Discord class="h-4 -ml-1" slot="logo" />
				</ShieldsBadge>
				<ShieldsBadge
					label="GitHub"
					message="Gu Team"
					labelClass="bg-zinc-700 text-white"
					messageClass="text-white bg-teal-600 dark:bg-teal-700">
					<Github class="h-4 -ml-1" slot="logo" />
				</ShieldsBadge>
			</div>
		</div>
		<div class="mt-12 flex flex-col sm:flex-row gap-3">
			<GsuButton
				text={intl.formatMessage({ id: "hero.buttons.documentation", defaultMessage: langEnUs["hero.buttons.documentation"] })}
				bgClass="bg-primary-500 dark:bg-primary-600">
				<Book class="h-5.5" slot="icon" />
			</GsuButton>
			<GsuButton
				bgClass="bg-teal-600 dark:bg-teal-700"
				text={intl.formatMessage({ id: "hero.buttons.download", defaultMessage: langEnUs["hero.buttons.download"] })}>
				<ArrowDownToLine class="h-5.5" slot="icon" />
			</GsuButton>
			<GsuButton
				bgClass="bg-sky-600 dark:bg-sky-700"
				text={intl.formatMessage({ id: "hero.buttons.register", defaultMessage: langEnUs["hero.buttons.register"] })}>
				<UserRoundPlus class="h-5.5" slot="icon" />
			</GsuButton>
		</div>
	</div>
</main>
<div class="grid grid-cols-4 pb-12 gap-3">
	<InfoCard
		image={cardImg1.src}
		imageAlt="Image description"
		title={intl.formatMessage({ id: "hero.features.1.title", defaultMessage: langEnUs["hero.features.1.title"] })}
		className="mx-auto">
		<MonitorCheck slot="icon" class="h-6 shrink-0" />
		<span slot="content"
			>{intl.formatMessage({ id: "hero.features.1.text", defaultMessage: langEnUs["hero.features.1.text"] })}</span
		>
	</InfoCard>

	<InfoCard
		image={cardImg2.src}
		imageAlt="Image description"
		title={intl.formatMessage({ id: "hero.features.2.title", defaultMessage: langEnUs["hero.features.2.title"] })}
		className="mx-auto">
		<Rocket slot="icon" class="h-6 shrink-0" />
		<span slot="content"
			>{intl.formatMessage({ id: "hero.features.2.text", defaultMessage: langEnUs["hero.features.2.text"] })}</span
		>
	</InfoCard>

	<InfoCard
		image={cardImg3.src}
		imageAlt="Image description"
		title={intl.formatMessage({ id: "hero.features.3.title", defaultMessage: langEnUs["hero.features.3.title"] })}
		className="mx-auto">
		<MessageSquareHeart slot="icon" class="h-6 shrink-0" />
		<span slot="content"
			>{intl.formatMessage({ id: "hero.features.3.text", defaultMessage: langEnUs["hero.features.3.text"] })}</span
		>
	</InfoCard>

	<InfoCard
		image={cardImg4.src}
		imageAlt="Image description"
		title={intl.formatMessage({ id: "hero.features.4.title", defaultMessage: langEnUs["hero.features.4.title"] })}
		className="mx-auto">
		<Settings slot="icon" class="h-6 shrink-0" />
		<span slot="content"
			>{intl.formatMessage({ id: "hero.features.4.text", defaultMessage: langEnUs["hero.features.4.text"] })}</span
		>
	</InfoCard>

	<InfoCard
		image={cardImg5.src}
		imageAlt="Image description"
		title={intl.formatMessage({ id: "hero.features.5.title", defaultMessage: langEnUs["hero.features.5.title"] })}
		className="mx-auto">
		<Bug slot="icon" class="h-6 shrink-0" />
		<span slot="content"
			>{intl.formatMessage({ id: "hero.features.5.text", defaultMessage: langEnUs["hero.features.5.text"] })}</span
		>
	</InfoCard>

	<InfoCard
		image={cardImg6.src}
		imageAlt="Image description"
		title={intl.formatMessage({ id: "hero.features.6.title", defaultMessage: langEnUs["hero.features.6.title"] })}
		className="mx-auto">
		<GitFork slot="icon" class="h-6 shrink-0" />
		<span slot="content"
			>{intl.formatMessage({ id: "hero.features.6.text", defaultMessage: langEnUs["hero.features.6.text"] })}</span
		>
	</InfoCard>

	<InfoCard
		image={cardImg7.src}
		imageAlt="Image description"
		title={intl.formatMessage({ id: "hero.features.7.title", defaultMessage: langEnUs["hero.features.7.title"] })}
		className="mx-auto">
		<Send slot="icon" class="h-6 shrink-0" />
		<span slot="content"
			>{intl.formatMessage({ id: "hero.features.7.text", defaultMessage: langEnUs["hero.features.7.text"] })}</span
		>
	</InfoCard>

	<InfoCard
		image={cardImg8.src}
		imageAlt="Image description"
		title={intl.formatMessage({ id: "hero.features.8.title", defaultMessage: langEnUs["hero.features.8.title"] })}
		className="mx-auto">
		<ChartColumnBig slot="icon" class="h-6 shrink-0" />
		<span slot="content"
			>{intl.formatMessage({ id: "hero.features.8.text", defaultMessage: langEnUs["hero.features.8.text"] })}</span
		>
	</InfoCard>
</div>
